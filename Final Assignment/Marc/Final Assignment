###FINAL ASSIGNMENT

#Marc Verwoert s4718801
#Vera Tukke s4766970

library(ggplot2)
library(car)
library(pastecs)
library(effects)
library(gvlma)

#Some general tips:

#Remember you need plots of your effects. If you have many predictors, there can be too many graphs for use of the allEffects() function. In this case, it is better to plot the effects individually. 
#For main effects, you can do this by using plot(Effect("name of effect", name_of_model_object))
#For interactions, you can use plot(Effect(c("name of effect 1","name of effect 2"), name_of_model_object))
#If your interaction is between 2 numerical predictors, it's better to use the contour/elevation plots we went over a couple of times.

#When checking for multicollinearity, note that vif values for interactions and single predictors that participate in interactions can be quite high. This is nothing to worry about. Single predictors that do not participate in interactions, however, should have vif values below 10.

#If you violate an assumption, use a different method if we've learned about one. However, if not, just note the assumption violation when you do the reporting and what this means for the interpretation of the results.

#In addition to the standard reporting of the results, please give a brief discussion of the findings. For example, if there is a significant interaction, talk about why this might be. What does the interaction actually mean logically? It's ok to speculate a bit here, since this is a statistics course and not a course about any one particular field.

#You'll have to load the necessary libraries! I do not provide those lines of code here!

#Also, when using drop1(), you must use the Chisq test instead of the F test when you have created a model using random intercepts!

#It may be necessary to remove rows that contain missing data!


###################
#####Swimming Data
###################

#datafile: swimming.csv

#In this study, the times it took for different participants to swim a lap in a swimming pool were measured. Swimmers varied in terms of which end of the pool they started from (End variable), whether they wore goggles, whether they wore a shirt, and whether they used flippers. Perform an analysis and consider up to 2-way interactions between predictors. 

swimmingData<- read.table(file.choose(), sep="\t", comment.char="", quote="", header=T)

#Outcome variable is time it took to swim a lap.

#We have added an interaction between two predictors using the ":"
swimming_model<- lm(Time ~ End + Shirt + Goggles + Flippers + End:Shirt + End:Goggles + End:Flippers+ Shirt:Goggles + Shirt:Flippers + Goggles:Flippers, data=swimmingData)

summary(swimming_model)

drop1(swimming_model, test="F")
#The interaction between everything except for Goggles: Flippers is (highly) non-significant and have a lower AIC. So, we drop all those interactions.

new_swimming_model <- swimming_model<- lm(Time ~ End + Shirt + Goggles + Flippers + Goggles:Flippers, data=swimmingData)

#Checking Assumptions:
#Auto-correlation
durbinWatsonTest(new_swimming_model)
#Statistic=   1.864806  , very close to 2, so assumption has certainly been met, so probably not correlated. P-value of Value .554 confirms this, it is bigger than .05, and therefore non-significant. The value however is less than 2, so indicates a positive correlation. So this assumption has been met, and thus the residuals are uncorrelated. This doesn't indicates some amount of autocorrelation.

#homoscedasticity normality, and high influence points

#No severe multicollinearity
vif(new_swimming_model)          
#No concering VIF values. All around 1.

#Residuals:
par(mfrow=c(2,2))
par(mar=c(4,4,4,4))
plot (new_swimming_model)

#Linearity: There no sort of curve in the (first) graph, this indicates that the data hasn't violated the assumption of linearity.

#Normal distributed: almost all of the datapoints fall kinda on the line, so it's probably normal.
#Homoscedasticity: this assumption does hold, the datapoints don't really funnel out. Also it looks like a random array of dots evenly dispersed around zero. So this doesn't indicate variance across residuals and thus doesn't indicate heteroscedasticity. 

#Leverage points:
dim(swimmingData)
averageSwimming<- (1+4)/70; averageSwimming #=  0.01 #(k+1)/n

swimmingHat <- hatvalues(new_swimming_model) 
swimmingTable<-swimmingHat > 2 *  averageSwimming | swimmingHat > 3*   averageSwimming; swimmingTable
table(swimmingTable)
#None of the values are 2 or 3 times bigger than the ave. value, and thus none affect the data points positioning.
#Also if you look at the graph: we have not really datapoints with extreme x-values, so we don't have leverage points, se we don't have cause for concern. 

#Influential points:
cookSwimming<-cooks.distance(new_swimming_model)
cookSwimmingTable<-cookSwimming > 1; cookSwimmingTable
table(cookSwimmingTable)
#Non of the values are bigger than 1. So, there are no influential points, and thus no outliers, that may affect the slope of the regression line.
#If you also look at the graph non of the points fall in the cook's distance and thus influence the cloud of the dots. The cloud of datapoints is pretty close to each other, and we don't have one point which affects the regression line highly.

#If there is not a significant interaction, then there is no difference in the slope
#If there is a significant interaction, then the slope must be adjusted by the value of the interaction coefficient
summary(new_swimming_model)

plot(allEffects(new_swimming_model))

#When flippers and goggles were worn, the slope of the line went downwards and with Flippers yes (and Goggles no) even negative, which could indicate a negative effect of this interaction on time on laps. And thus resulting in a more positive performance, the time on laps went down when flippers and or goggles were worn.

#Means for each combination of factor levels
by(swimmingData$Time, list(swimmingData$Shirt,swimmingData$Goggles, swimmingData$Flippers, swimmingData$End), stat.desc)
# Shows, that the means are clearly different. The means for time have lower values, when goggles and flippers are worn then when they aren't.

#We're now going to do a ANOVA, to see if the difference is significant.

Anova(new_swimming_model, type="III")

#The final model formula was Time~ End + Shirt + Goggles:Flippers. The main effect End was not sigificant (p>0.5), but the main effect shirt and goggles were (p<0.5) though the interaction between flippers and goggles was significant (p<0.05). Specifically, flippers showed a significant decrease in time needed for laps as they moved from no flippers to flippers. When flippers and goggles were put together, compared to no flippers and goggles, time needed for laps increased when those were both no. The model was highly significant overall (F(5,64)=11.44, p<0.001) with a large degree of explained variance (mult. R2= 0.4719, adj. R2=0.4306). All regression coefficients, as well as their standard errors, t scores, and p-values, are provided in the appendix. Checking of model assumptions revealed no problems.

#Appendix:
#Sum Sq Df   F value    Pr(>F)    
#(Intercept)      5463.6  1 1002.6632 < 2.2e-16 ***
#End                 4.7  1    0.8597 0.3573032    
#Shirt              50.2  1    9.2173 0.0034651 ** 
#Goggles            79.4  1   14.5703 0.0003071 ***
#Flippers          205.5  1   37.7046  5.82e-08 ***
#Goggles:Flippers   63.6  1   11.6657 0.0011103 ** 
#Residuals         348.7 64         

#In addition to the standard reporting of the results, please give a brief discussion of the findings. For example, if there is a significant interaction, talk about why this might be. What does the interaction actually mean logically? It's ok to speculate a bit here, since this is a statistics course and not a course about any one particular field.

# The findings showed that flippers and goggles improved the time needed for swimming, especially when combined. Thus, it follows logically that someone whowears flippers and/or goggles is statistically speaking a faster siwmmer than someone without those. There is also a significant interaction between the two, thus when the slope of flippers changes, the slope of goggles changes as well, thus someone who wears flippers, is more likely to also wear goggles.


##########################
##########Reaction Times
##########################

#datafile: reaction_times.csv

#In this study, participants had to make a decision on whether a sequence of letters presented to them on a computer screen was a word or not. How long it took for them to make this decision was recorded (their reaction time). This is called a lexical decision task. In this kind of task, many different factors can influence reaction times, including how frequent the word is, how familiar the work is, and how "imageable" it is--that is, how easy it is to imagine a picture of the word's meaning. Investigate whether, for this data set, this is true. Consider up to the 3-way interaction. Note that reaction times are averages from across participants, so although this was originally a within-subject experiment, participant-level variance is not shared across data points.

RTs <- read.table(file.choose(), header=T, sep="\t", row.names=1)
head(RTs)

#In this data, we will predict reaction times to word stimuli on the basis of how frequent, familiar and imageabile the words are; thus more frequent, imageabile and familiar words should be reacted to faster.

#Check levels; hi is ref level since it is alphabetically first
levels(RTs$FAMILIARITY)

#change default level to lo
RTs$FAMILIARITY <- relevel(RTs$FAMILIARITY, "lo"); levels(RTs$FAMILIARITY)
rt_model <- lm(RT ~ FREQUENCY + FAMILIARITY + IMAGEABILITY + FAMILIARITY:FREQUENCY+ FAMILIARITY: IMAGEABILITY +FREQUENCY:IMAGEABILITY, data=RTs)


#Model selection:
drop1(rt_model, test="F")
#All of the interactions are highly non-significant and have a lower AIC. So, we drop all interactions.

new_rt_model <- lm(RT ~ FREQUENCY + FAMILIARITY + IMAGEABILITY, data=RTs)
drop1(new_rt_model, test="F")
#This shows that IMAGEABILITY is highly non-significant and has a lower AIC, so we drop this predictor.
final_rt_model <- lm(RT ~ FREQUENCY + FAMILIARITY, data=RTs)
summary(new_rt_model)

###plot the effects
plot(allEffects(new_rt_model))
#The plots show that: when frequency goes up, the reaction times go indeed down.
#The plots show that: when familiarity is high, reaction times are lower, then when familiarity is low.
#The plots show that: when imageability is high, reaction times are lower, then when imageability is low.
#Planned contrasts.

#levels(RTs$FAMILIARITY)
#contrast1 <- c(-2, 1, 1)
#contrast2 <- c(0, 1, -1)

#contrasts(RTs$FAMILIARITY) <- cbind(contrast1,contrast2)
#contrasts(RTs$FAMILIARITY)

rt_model_planned_2 <- lm(RT ~ FREQUENCY + FAMILIARITY, data=RTs)
summary(rt_model_planned_2)


plot(allEffects(rt_model_planned_2))
#The plots show that: when frequency goes up, the reaction times go indeed down.
#The plots show that: when familiarity is high, reaction times are lower, then when familiarity is low.

#And we can get statistics for the whole FAMILIARITY predictor, not just the contrasts:
Anova(rt_model_planned_2, type="III")


#Checking assumptions (use GVIF values as you would VIF values)

#Checking Assumptions:
#Auto-correlation
durbinWatsonTest(rt_model_planned_2)
#Statistic=    2.429317, quite close to 2, so assumption has proably been met, so probably not correlated. P-value of Value .147 confirms this, it is bigger than .05, and therefore non-significant. The value however is more than 2, so indicates a negative correlation. So this assumption has been met, and thus the residuals are uncorrelated. This doesn't indicates some amount of autocorrelation.

#homoscedasticity normality, and high influence points

#No severe multicollinearity
vif(rt_model_planned_2)          
#No concering VIF values. All around 1.

#Residuals:
par(mfrow=c(2,2))
par(mar=c(4,4,4,4))
plot (rt_model_planned_2)

#Linearity: There not really a sort of curve in the (first) graph, this indicates that the data hasn't violated the assumption of linearity.

#Normal distributed: almost all of the datapoints fall kinda on the line, so it's probably normal.
#Homoscedasticity: this assumption does hold, the datapoints don't really funnel out. Also it looks like a random array of dots evenly dispersed around zero. So this doesn't indicate variance across residuals and thus doesn't indicate heteroscedasticity. 

#Leverage points:
dim(RTs)
averagert<- (1+4)/48; averagert #=  0.01 #(k+1)/n

rtHat <- hatvalues(rt_model_planned_2) 
rtTable<-rtHat > 2 *  averagert | rtHat > 3*   averagert; rtTable
table(rtTable)
#None of the values are 2 or 3 times bigger than the ave. value, and thus none affect the data points positioning.
#Also if you look at the graph: we have not really datapoints with extreme x-values, so we don't have leverage points, se we don't have cause for concern. 

#Influential points:
cookrt<-cooks.distance(rt_model_planned_2)
cookrtTable<-cookrt > 1; cookrtTable
table(cookrtTable)
#None of the values are bigger than 1. So, there are no influential points, and thus no outliers, that may affect the slope of the regression line.
#If you also look at the graph non of the points fall in the cook's distance and thus influence the cloud of the dots. The cloud of datapoints is pretty close to each other, and we don't have one point which affects the regression line highly.

#Post-hoc test:
pairwise.t.test(RTs$RT, RTs$FAMILIARITY, p.adjust.method="BH")

#Each value is a p-value that tells us whether the particular pair of factor levels have different means.


#Reporting: The final model's formula was RT ~ FREQUENCY + FAMILIARITY. The overall effect of FAMILIARITY was significant (p=0.02882 < 0.05). However, a post-hoc test showed wasn't significant between the low familiarity condition and the medium and high familiarity conditions (p=0.013). Specifically, reaction times in the medium and high familiarity conditions were lower than in the low condition. While the reaction times in the medium condition were higher than in the high condition. There was also a significant effect of FREQUENCY (p=0.04767); as Frequency increased, reaction times decreased. Finally, the model was significant overall (F(2,45)=5.671, p<0.05) and explained  a small amount of variance (Multiple R-squared:  0.2013,	Adjusted R-squared:  0.1658 . All regression coefficients, as well as their standard errors, t scores, and p-values, are provided in the appendix. Checking of model assumptions revealed no problems.


#Appendix: 
#  Coefficients:
#  Estimate Std. Error t value Pr(>|t|)    
#  (Intercept)    665.794     16.939  39.306   <2e-16 ***
#  FREQUENCY      -10.386      5.101  -2.036   0.0477 *  
#  FAMILIARITYhi  -38.738     17.153  -2.258   0.0288 *  
#  ---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

#Residual standard error: 41.21 on 45 degrees of freedom
#Multiple R-squared:  0.2013,	Adjusted R-squared:  0.1658 
#F-statistic: 5.671 on 2 and 45 DF,  p-value: 0.006362

#In addition to the standard reporting of the results, please give a brief discussion of the findings. For example, if there is a significant interaction, talk about why this might be. What does the interaction actually mean logically? It's ok to speculate a bit here, since this is a statistics course and not a course about any one particular field.

# The findings showed that the 3 predictors hadn't had any meaningful interaction between them, since they could be dropped. So, apparantely the 3 predictors didn't effect each other in a meaningful way. However, as words become more familiar, the rt increased. Imageability could be dropped as a predictor, so this didn't matter wrt to reaction time, thus an more imageabile word, didn't mean an faster reaction time.  Frequency did contribute significantly to a lower RT tim, thus apparently the more frequent a word appeared, the lower the raction time.


#########################
#########Housing Data
#########################

#Datafile: housing_data.csv

#In this study, researchers collected data on crime rates for different city blocks in and around Boston in the U.S. You are interested in determining which variables predict crime rate. You are particularly interested in how economic status and ethnic diversity interact with each other as well as how each one interacts with the other predictors. Perform a proper analysis. The column information is below. (Note: because towns are repeated, we are actually violating the independence assumption. Normally, we would want to assign random intercepts to each town, but because we do not have a "town" variable, this is difficult...so we'll just ignore this here :-)


#1. CRIM      per capita crime rate by block
#2. INDUS     proportion of non-retail business acres per town
#3. CHAS      whether property is next to the Charles River or not
#4. NOX       nitric oxides concentration (parts per 10 million)
#5. RM        average number of rooms per dwelling
#6. AGE       proportion of owner-occupied units built prior to 1940
#7. DIS       weighted distances to five Boston employment centres
#8. RAD       index of accessibility to radial highways
#9. PTRATIO   pupil-teacher ratio by town
#10. B        measure of ethnic diversity
#11. LSTAT    % lower economic status of the population
#12. MEDV     Median value of owner-occupied homes in $1000's















###############################
#########Idiom Experiment
###############################

#Datafile: idiom_lexical_decision.csv

#In this experiment, participants were shown Dutch idioms such as "de koe bij de hoorns vatten" (grab the cow by the horns), which hase a figurative meaning of "to take control of a situation." After each idiom, they were shown either a word or a nonword and had to decide whether it was a word or not. The words were related either to the figurative meaning ("Fig" Condition) or to the literal meaning of the last word ("hoorns", i.e. the "Lit" Condition). The experimenter measured how much time, in milliseconds, it took for the participants to make the decision (this is called a lexical decision task), and then she took the log of these reaction times. If reading the idiom activated its figurative meaning in the mind of the subject, then they will be quicker to decide that a figuratively related word ("Fig") is indeed a word. If reading the idioms activated its literal meaning, then the subject will be quicker to make a decision on a literally related words. 

#Other factors might affect reaction times as well. These include: 
#the frequency of the word, 
#the literal plausibility (LP) of the idiom (how easy is it to interpret literally, e.g., "staan voor aap" = "stand for ape" is not literally plausible!)
#the transparency of the idiom (how related are the figurative and literal meanings, e.g., "tegen de lamp lopen" = "walk into the lamp" is not very related to figurative meaning "get caught")
#How well the subject knows the idiom (Knowledge)

#Your job is to conduct an analysis of this data and report your results. Consider all 2-way interactions. 

#Note: there are multiple data points per subject and per idiom, so both of the variables cause a violation of the independence assumption of regression. You will thus need to give both of these variables random intercepts. (you can just add a second random intercept term to your model equation like you add a first one)

#Note: You only need to check the assumptions of homoscedasticity and normally distributed residuals. Plotting the model will only give you the first diagnostic plot, which you can use to check homoscedasticity. To check for normal residuals, you can first get the residuals by passing the model object to the residuals() function, and then plotting the output.







#########################
#########Attributions
#########################

#Datafile: clause_order_data.csv

#In this experiment, participants read stories about different people and then indicate how favorable they feel about these people (the normV variable). The last sentence of a story is something like "Jay climbed through a window and stole the jewels, police said." This sentence can either be positive or negative (in the Exp column, "Pos" or "Neg"). Furthermore, the story itself can overall be a mixture of positive and negative actions (storyType=positive) or it can agree with the tone of the final sentence (storyType=accordant); that is, a positive story can go with a positive final sentence and a negative story can go with a negative final sentence. Finally, the "attribution phrase" (i.e., "police said") in the sentence can come either at the beginning of the sentence or the end: "Jay climbed through a window and stole the jewels, police said" versus "Police said that Jay climbed through the window and stole the jewels." Attribution phrases are known to weaken statements when placed first. Therefore, if a sentence is negative, then having "police said" at the beginning will make the statement less severe, and we expect the participants to rate Jay more positively. Similarly, if a sentence is positive, having "police said" at the end will weaken the positive statement less, and we expect the participants to rate Jay more positively. Both of these situations represent the bias=positiveBias condition. On the other hand, placing "police said" at the end of a negative sentence weakens the sentence less, and we expect people to rate Jay more negatively. Similarly, placing "police said" at the beginning of a positive sentence weakens the sentence more, and we expect people to rate Jay more negatively. Both of these situations represent the bias=negativeBias condition.

#Analyze the data to try to determine which of the variables discussed (and their interactions) predict participants' favorability ratings of the people in the stories. In addition, we are also interested in age and gender, although you don't need to include these as interactions with other variables.

#Note: the data in columns "situation" and "person" were used to determine whether the participant was paying attention. If they were, there should be a value of "burglary" or "PSA" in the "situation" column, and "WJ" in the person column. All other data is not valid and should be excluded.


